#
#=========  Telegramm  =========
## authentication token
bot.settings.bot-token=${bot.settings.sensitive.bot-token}
## authentication bot name
bot.settings.bot-name=${bot.settings.sensitive.bot-name}
## URL for communication with Telegram API
bot.settings.base-url=https://api.telegram.org
## admin username
bot.settings.admin-username=${bot.settings.sensitive.admin-username}
## admin email
bot.settings.admin-email=${bot.settings.sensitive.admin-email}
## switcher of bot`s work modes (P - only "tet-a-tet", G - only group, B - both group and "tet-a-tet")
bot.settings.work-with=P
## bot locking on concrete chats
bot.settings.work-with-groups=${bot.settings.sensitive.work-with-groups}
## flea-market URL
bot.settings.flea-market=${bot.settings.sensitive.flea-market}
## pinned message URL
bot.settings.pinned-message=${bot.settings.sensitive.pinned-message}
## info-table URL
bot.settings.info-table=${bot.settings.sensitive.info-table}
## our WiKi URL
bot.settings.wiki-url=${bot.settings.sensitive.wiki-url}
#
#
#=========  Schedulers  =========
## pool size for app base scheduler
bot.settings.scheduler.base-pool-size=20
## long pooling scheduler activate or not
bot.settings.scheduler.long-pooling.enable=true
## long pooling scheduler cron time (every 1 second)
bot.settings.scheduler.long-pooling.cron-time=* * * ? * *
## modules scheduler activate once on start application (before scheduled time will be activated) or not
bot.settings.scheduler.modules.do-on-app-start.enable=false
## modules scheduler activate or not
bot.settings.scheduler.modules.enable=false
## modules scheduler cron time (every 5 hours)
bot.settings.scheduler.modules.cron-time=0 0 */5 ? * *
## reminders scheduler activate or not
bot.settings.scheduler.reminders.enable=false
## reminders scheduler cron time (every day at 9am)
bot.settings.scheduler.reminders.cron-time=0 0 9 * * ?
## reminders about new discounts scheduler activate or not
bot.settings.scheduler.reminders.new-discount.enable=false
#
#
#=========  Rest-client  =========
## (zero value will be overridden in the code with default values)
bot.settings.pool.connections.timeout=0
## (zero value will be overridden in the code with default values)
bot.settings.http.connection.response.timeout=0
## (zero value will be overridden in the code with default values)
bot.settings.http.connection.request.timeout=0
## (zero value will be overridden in the code with default values)
bot.settings.http.max.connection.per.rout=0
## (zero value will be overridden in the code with default values)
bot.settings.http.max.connections=0
## (zero value will be overridden in the code with default values)
bot.settings.http.connection.timeout=0
#
#
#=========  Actuator  =========
## path to actuator endpoints (Spring default = /actuator)
management.endpoints.web.base-path=/
#
#
#=========  Redis  =========
spring.cache.type=redis
#spring.redis.host=${spring.redis.host.sensitive}
#spring.redis.port=${spring.redis.port.sensitive}
#spring.redis.password=${spring.redis.password.sensitive}
#spring.redis.database=${spring.redis.database.sensitive}
spring.redis.prefix=nerd
#
#
#=========  Logger  =========
logging.level.root=${logging.level.root.sensitive:info}
logging.level.com.mixram.telegram.bot=${logging.level.com.mixram.telegram.bot.sensitive:info}
logging.level.com.mixram.telegram.bot.config.security=${logging.level.com.mixram.telegram.bot.config.security.sensitive:info}
logging.level.com.mixram.telegram.bot.utils.rest=${logging.level.com.mixram.telegram.bot.utils.rest.sensitive:info}
logging.level.org.springframework=${logging.level.org.springframework.sensitive:info}
logging.level.org.springframework.security=${logging.level.org.springframework.security.sensitive:info}
#
#
#=========  Common  =========
## app port (port 80 - in order not to write :8080 after domain)
server.port=${server.port.sensitive:8080}
#
#
#=========  Other  =========
## maximum quantity of discounts on plastic after which do trim
bot.settings.other.max-quantity-for-full-view=5
## to inform or not about version changes
bot.settings.other.inform-about-version=false
#
#
#=========  Html-parser  =========
## 3DPlast time to wait till new URL will be parsed (in millis)
parser.3dplast.time-to-wait-till-parse-new-url=10000
## U3DF time to wait till new URL will be parsed (in millis)
parser.u3df.time-to-wait-till-parse-new-url=10000
## 3DUA time to wait till new URL will be parsed (in millis)
parser.3dua.time-to-wait-till-parse-new-url=10000
## Monofilament time to wait till new URL will be parsed (in millis)
parser.mono.time-to-wait-till-parse-new-url=10000
## DasPlast time to wait till new URL will be parsed (in millis)
parser.dasplast.time-to-wait-till-parse-new-url=10000
## Plexiwire time to wait till new URL will be parsed (in millis)
parser.plex.time-to-wait-till-parse-new-url=10000
## search class name for all elements holder (array) for Monofilament
parser.mono.search-names.main-element-class.name=product-layout
## search class name for product name for Monofilament
parser.mono.search-names.product-name-class.name=product-thumb
## search class name for product name concrete holder for Monofilament
parser.mono.search-names.product-name-concrete-holder-class.name=caption
## search class name for product name 'href' attribute for Monofilament
parser.mono.search-names.product-name-href-attr.name=href
## search class name for product discount for Monofilament
parser.mono.search-names.product-discount.name=sale
## search class name for all elements holder (array) for 3DUA
parser.3dua.search-names.main-element-class.name=product-item
## search class name for old price for 3DUA
parser.3dua.search-names.old-price-selector.name=[class="price-uah old"]
## search class name for new price for 3DUA
parser.3dua.search-names.new-price-selector.name=[class="price-uah new"]
## search class name for product name for 3DUA
parser.3dua.search-names.product-name-selector.name=[class="product-name"]
## search class name for product name 'title' attribute for 3DUA
parser.3dua.search-names.product-name-title-attr.name=title
## search class name for product URL 'href' attribute for 3DUA
parser.3dua.search-names.product-name-href-attr.name=href
## search selector name for product presence for 3DUA
parser.3dua.search-names.product-presence-class.name=in-stock-text
## search pattern name for product presence for 3DUA (\u0415\u0441\u0442\u044C \u0432 \u043D\u0430\u043B\u0438\u0447\u0438\u0438)
parser.3dua.search-names.product-presence-pattern.name=\u0415\u0441\u0442\u044C \u0432 \u043D\u0430\u043B\u0438\u0447\u0438\u0438
## search class name for all elements holder (array) for U3DF
parser.u3df.search-names.main-element-class.name=cs-product-gallery__item
## search class name for old price for U3DF
parser.u3df.search-names.old-price-selector.name=[class="cs-goods-price__value cs-goods-price__value_type_old"]
## search class name for new price for U3DF
parser.u3df.search-names.new-price-selector.name=[class="cs-goods-price__value"]
## search selector name for product name for U3DF
parser.u3df.search-names.product-name-selector.name=[class="cs-goods-title"]
## search class name for product URL 'href' attribute for U3DF
parser.u3df.search-names.product-name-href-attr.name=href
## search selector name for product presence for U3DF
parser.u3df.search-names.product-presence-class.name=cs-goods-data__state
## search pattern name for product presence for U3DF (\u0412 \u043D\u0430\u043B\u0438\u0447\u0438\u0438|\u0417\u0430\u043A\u0430\u043D\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044F)
parser.u3df.search-names.product-presence-pattern.name=\u0412 \u043D\u0430\u043B\u0438\u0447\u0438\u0438|\u0417\u0430\u043A\u0430\u043D\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044F
## search class name for all elements holder (array) for 3Dplast
parser.3dplast.search-names.main-element-class.name=b-product-gallery__item
## search class name for old price for 3Dplast
parser.3dplast.search-names.old-price-selector.name=[class="b-product-gallery__old-price"]
## search class name for new price for 3Dplast
parser.3dplast.search-names.new-price-selector.name=[class="b-product-gallery__current-price"]
## search selector name for product name for 3Dplast
parser.3dplast.search-names.product-name-selector.name=[class="b-product-gallery__title"]
## search class name for product URL 'href' attribute for 3Dplast
parser.3dplast.search-names.product-name-href-attr.name=href
## search selector name for product presence for 3Dplast
parser.3dplast.search-names.product-presence-class.name=b-product-gallery__state
## search pattern name for product presence for 3Dplast (\u0412 \u043D\u0430\u043B\u0438\u0447\u0438\u0438|\u0417\u0430\u043A\u0430\u043D\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044F)
parser.3dplast.search-names.product-presence-pattern.name=\u0412 \u043D\u0430\u043B\u0438\u0447\u0438\u0438|\u0417\u0430\u043A\u0430\u043D\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044F
## search class name for all elements holder (array) for DasPlast
parser.dasplast.search-names.main-element-class.name=b-product-gallery__item
## search class name for old price for DasPlast
parser.dasplast.search-names.old-price-selector.name=[class="b-goods-price__value b-goods-price__value_type_old"]
## search class name for new price for DasPlast
parser.dasplast.search-names.new-price-selector.name=[class="b-goods-price__value b-goods-price__value_type_current"]
## search selector name for product name for DasPlast
parser.dasplast.search-names.product-name-selector.name=[class="b-goods-title b-product-gallery__title"]
## search class name for product URL 'href' attribute for DasPlast
parser.dasplast.search-names.product-name-href-attr.name=href
## search selector name for product presence for DasPlast
parser.dasplast.search-names.product-presence-class.name=b-goods-data__state
## search pattern name for product presence for DasPlast (\u0412 \u043D\u0430\u043B\u0438\u0447\u0438\u0438|\u0417\u0430\u043A\u0430\u043D\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044F)
parser.dasplast.search-names.product-presence-pattern.name=\u0412 \u043D\u0430\u043B\u0438\u0447\u0438\u0438|\u0417\u0430\u043A\u0430\u043D\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044F
## search class name for all elements holder (array) for Plexiwire
parser.plex.search-names.main-element-class.name=product
## search class name for old price for Plexiwire
parser.plex.search-names.old-price-selector.name=[class="old-price"]
## search class name for new price for Plexiwire
parser.plex.search-names.new-price-selector.name=[class="price"]
## search selector name for product name for Plexiwire
parser.plex.search-names.product-name-selector.name=[class="name"]
## search class name for product URL 'href' attribute for Plexiwire
parser.plex.search-names.product-name-href-attr.name=href
#
## URLs to parse for U3DF
parser.u3df.settings={"shopUrl":"https://u3df.com.ua","settings":[]}
## URLs to parse for 3DPlasr
parser.3dplast.settings={"shopUrl":"https://3dplast.biz","settings":[]}
## URLs to parse for 3DUA
parser.3dua.settings={"shopUrl":"https://3dua.com.ua","settings":[]}
## URLs to parse for Monofilament
parser.mono.settings={"shopUrl":"https://monofilament.com.ua","settings":[]}
## URLs to parse for DasPlast
parser.dasplast.settings={"shopUrl":"https://dasplast.com","settings":[]}
## URLs to parse for Plexiwire
parser.plex.settings={"shopUrl":"https://shop.plexiwire.com.ua","settings":[]}
